
Study-Time:
    2020-07-21

    1.在启动类上加 @EnableScheduling
    2.方法上添加 @Scheduled
    3.三种调度方式:
        fixedRate:  固定频率调用      fixedRateString(一样,只不过单位是String)
            上一个调用后再次调用的延时(不用等待上一次调用完成,这样会出现重复调用的情况,不推荐使用)

        fixedDelay:  固定间隔任务     fixedDelayString(一样，只不过单位是String)
            下一次方法的执行时间,从上一次方法调用执行完后开始计算时间.然后开始周期性的调用方法

        Cron表达式:  自定义时间执行,由6/7个空格分隔的时间字段组成
            位置      时间域名        允许值                 允许的特殊字符
            1           秒           0-59                    ,(一个列表值) -(一个范围) *(每) /(x/y,x是开始值,y是步长)
            2           分           0-59                    ,(一个列表值) -(一个范围) *(每) /(x/y,x是开始值,y是步长)
            3           时           0-23                    ,(一个列表值) -(一个范围) *(每) /(x/y,x是开始值,y是步长)
            4           天           1-31                    ,(一个列表值) -(一个范围) *(每) /(x/y,x是开始值,y是步长) ?(标识这个位置的值不确定) L(最后一个) W(最近的工作日,不会跨月份) C()
            5           月           1-12                    ,(一个列表值) -(一个范围) *(每) /(x/y,x是开始值,y是步长)
            6           星期          1-7                     ,(一个列表值) -(一个范围) *(每) /(x/y,x是开始值,y是步长) ?(标识这个位置的值不确定) L(最后一个) W(最近的工作日,不会跨月份) #(用于确定每个月的第几个星期几)     !1代表周日,以此类推!
            7           年(可选)       空值/1970-2099            ,(一个列表值) -(一个范围) *(每) /(x/y,x是开始值,y是步长)
    4.配置属性详解:
        initialDelay:   initiakDelayString (一样,只不过单位是String)
            表示延时多久后，执行第一次任务,参数类型为 long, 单位是 ms
        zone:
            时区,默认为当前时区,一直没有用到

    4.时间漂移:
        系统中有多个定时器要执行，但是Spring-Task是默认创建一个单线程池的,此时就会出现时间漂移,任务的执行时间将不确定。
        自定义一个 TaskScheduler 线程池

